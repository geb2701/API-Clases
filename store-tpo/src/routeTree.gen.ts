/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as ProductosIndexRouteImport } from './routes/productos/index'
import { Route as ProductosIdRouteImport } from './routes/productos/$id'
import { Route as ProductosCategoriasNombreRouteImport } from './routes/productos/categorias/$nombre'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const ProductosIndexRoute = ProductosIndexRouteImport.update({
  id: '/productos/',
  path: '/productos/',
  getParentRoute: () => rootRouteImport,
} as any)
const ProductosIdRoute = ProductosIdRouteImport.update({
  id: '/productos/$id',
  path: '/productos/$id',
  getParentRoute: () => rootRouteImport,
} as any)
const ProductosCategoriasNombreRoute =
  ProductosCategoriasNombreRouteImport.update({
    id: '/productos/categorias/$nombre',
    path: '/productos/categorias/$nombre',
    getParentRoute: () => rootRouteImport,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/productos/$id': typeof ProductosIdRoute
  '/productos': typeof ProductosIndexRoute
  '/productos/categorias/$nombre': typeof ProductosCategoriasNombreRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/productos/$id': typeof ProductosIdRoute
  '/productos': typeof ProductosIndexRoute
  '/productos/categorias/$nombre': typeof ProductosCategoriasNombreRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/productos/$id': typeof ProductosIdRoute
  '/productos/': typeof ProductosIndexRoute
  '/productos/categorias/$nombre': typeof ProductosCategoriasNombreRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/productos/$id'
    | '/productos'
    | '/productos/categorias/$nombre'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/productos/$id' | '/productos' | '/productos/categorias/$nombre'
  id:
    | '__root__'
    | '/'
    | '/productos/$id'
    | '/productos/'
    | '/productos/categorias/$nombre'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ProductosIdRoute: typeof ProductosIdRoute
  ProductosIndexRoute: typeof ProductosIndexRoute
  ProductosCategoriasNombreRoute: typeof ProductosCategoriasNombreRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/productos/': {
      id: '/productos/'
      path: '/productos'
      fullPath: '/productos'
      preLoaderRoute: typeof ProductosIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/productos/$id': {
      id: '/productos/$id'
      path: '/productos/$id'
      fullPath: '/productos/$id'
      preLoaderRoute: typeof ProductosIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/productos/categorias/$nombre': {
      id: '/productos/categorias/$nombre'
      path: '/productos/categorias/$nombre'
      fullPath: '/productos/categorias/$nombre'
      preLoaderRoute: typeof ProductosCategoriasNombreRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ProductosIdRoute: ProductosIdRoute,
  ProductosIndexRoute: ProductosIndexRoute,
  ProductosCategoriasNombreRoute: ProductosCategoriasNombreRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
